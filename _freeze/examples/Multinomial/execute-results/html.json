{
  "hash": "a3593e372825564b7ce3a862234e5ad4",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Multinomial\nsubtitle: '[Reference](../reference/Multinomial.qmd)'\n---\n\n_Application: sample ratio mismatch._ \n\nConsider a new experimental unit $n$ is assigned to one of $i \\in \\{1, 2, 3\\}$ groups with probabilities $\\mathbf{\\theta} = [0.1, 0.3, 0.6]$. Therefore, groups are $\\mathrm{Multinomial}(1, \\mathbf{\\theta})$ distributed.\n\n::: {#data .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\n\ntheta = np.array([0.1, 0.3, 0.6])\nsize = 1000\nnp.random.seed(1)\nxs = np.random.multinomial(1, theta, size=size)\nprint(xs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[0 1 0]\n [0 0 1]\n [0 0 1]\n ...\n [0 1 0]\n [1 0 0]\n [0 0 1]]\n```\n:::\n:::\n\n\nWe can test the hypothesis\n\n$$\n\\begin{align}\nH_0: \\mathbf{\\theta} = \\mathbf{\\theta_0} \\\\\nH_1: \\mathbf{\\theta} \\neq \\mathbf{\\theta_0}\n\\end{align}\n$$\n\nwith $\\mathbf{\\theta_0} = [0.1, 0.4, 0.5]$ and estimate $(1 - \\alpha)$ confidence sequences for $\\mathbf{\\theta}$ using the `Multinomial` test:\n\n::: {#hypothesis .cell message='false' execution_count=2}\n``` {.python .cell-code}\nfrom savvi.multinomial import Multinomial\nalpha = 0.05\ntheta_0 = np.array([0.1, 0.4, 0.5])\nmultinomial = Multinomial(alpha, theta_0)\n```\n\n::: {.cell-output .cell-output-error}\n```\nAttributeError: _ARRAY_API not found\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n(CVXPY) Oct 24 05:36:17 PM: Encountered unexpected exception importing solver ECOS:\nImportError('numpy.core.multiarray failed to import')\n(CVXPY) Oct 24 05:36:17 PM: Encountered unexpected exception importing solver SCS:\nImportError('numpy.core.multiarray failed to import')\n(CVXPY) Oct 24 05:36:17 PM: Encountered unexpected exception importing solver ECOS_BB:\nImportError('numpy.core.multiarray failed to import')\n(CVXPY) Oct 24 05:36:17 PM: Encountered unexpected exception importing solver OSQP:\nImportError('numpy.core.multiarray failed to import')\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nAttributeError: _ARRAY_API not found\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nAttributeError: _ARRAY_API not found\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nAttributeError: _ARRAY_API not found\n```\n:::\n:::\n\n\nFor each new unit sample $n$, we run the test. If $p_n < \\alpha$, we have the option to stop running:\n\n::: {#cell-sequence .cell execution_count=3}\n``` {.python .cell-code}\nsequence = multinomial.batch(xs)\noptional_stop = next(s for s in sequence if s.p_value <= alpha)\noptional_stop\n```\n\n::: {#sequence .cell-output .cell-output-display .cell-output-markdown execution_count=3}\n| Parameter|Estimate|CI Lower|CI Upper|\n|----------|--------|--------|--------|\n|$\\theta_0$| 0.0995 | 0.0567 | 0.1494 |\n|$\\theta_1$| 0.3209 | 0.2609 | 0.4028 |\n|$\\theta_2$| 0.5796 | 0.4971 | 0.6518 |\nSample size: 402, P-value: 0.0485\n:::\n:::\n\n\n::: {#cell-viz .cell execution_count=4}\n``` {.python .cell-code code-fold=\"true\"}\n%config InlineBackend.figure_formats = [\"svg\"]\nfrom savvi.utils import plot\n\nplot(sequence, theta);\n```\n\n::: {.cell-output .cell-output-display}\n![](Multinomial_files/figure-html/viz-output-1.svg){#viz}\n:::\n:::\n\n\n\n\n",
    "supporting": [
      "Multinomial_files"
    ],
    "filters": [],
    "includes": {}
  }
}