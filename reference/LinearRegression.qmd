# LinearRegression { #savvi.linear_regression.LinearRegression }

```python
linear_regression.LinearRegression(self, alpha, p, phi=1)
```

Covariate adjusted t-tests from @lindon2024anytimevalidlinearmodelsregression.

Coefficients and covariance matrix are calculated using the Recursive Least
Squares algorithm.

* Parent class: [`Inference`](/reference/Inference.qmd)
* [Example](../examples/LinearRegression.qmd)

## Parameters {.doc-section .doc-section-parameters}

| Name   | Type   | Description                           | Default    |
|--------|--------|---------------------------------------|------------|
| alpha  | float  | Probability of Type I error $\alpha$. | _required_ |
| p      | int    | Number of covariates $p$.             | _required_ |
| phi    | float  | Prior scale $\phi$.                   | `1`        |

## Attributes

| Name | Description |
| --- | --- |
| [Xty](#savvi.linear_regression.LinearRegression.Xty) | Sum of products of covariates and response $X^T y$. |
| [beta](#savvi.linear_regression.LinearRegression.beta) | Estimate of regression coefficients $\hat{\beta}$. |
| [covariance](#savvi.linear_regression.LinearRegression.covariance) | Estimate of covariance matrix $\hat{\Sigma}$. |
| [phi](#savvi.linear_regression.LinearRegression.phi) | Prior scale $\phi$. |
| [yty](#savvi.linear_regression.LinearRegression.yty) | Sum of squared response values $y^T y$. |

## Methods

| Name | Description |
| --- | --- |
| [nu](#savvi.linear_regression.LinearRegression.nu) | Degrees of freedom. |
| [predict](#savvi.linear_regression.LinearRegression.predict) | Predict values for given covariates. |
| [sigma](#savvi.linear_regression.LinearRegression.sigma) | Estimate the standard deviation of the error term. |
| [sse](#savvi.linear_regression.LinearRegression.sse) | Compute the Sum of Squared Errors (SSE). |
| [standard_errors](#savvi.linear_regression.LinearRegression.standard_errors) | Estimate the standard errors of the coefficients. |
| [t_stats](#savvi.linear_regression.LinearRegression.t_stats) | Calculate the t statistics of the coefficients. |
| [update](#savvi.linear_regression.LinearRegression.update) | Update the model with new data. |
| [z2](#savvi.linear_regression.LinearRegression.z2) | Calculate the squared z-scores. |

### nu { #savvi.linear_regression.LinearRegression.nu }

```python
linear_regression.LinearRegression.nu()
```

Degrees of freedom.

#### Returns {.doc-section .doc-section-returns}

| Name   | Type   | Description   |
|--------|--------|---------------|
|        | int    |               |

### predict { #savvi.linear_regression.LinearRegression.predict }

```python
linear_regression.LinearRegression.predict(X)
```

Predict values for given covariates.

#### Parameters {.doc-section .doc-section-parameters}

| Name   | Type       | Description           | Default    |
|--------|------------|-----------------------|------------|
| X      | np.ndarray | Matrix of covariates. | _required_ |

#### Returns {.doc-section .doc-section-returns}

| Name   | Type       | Description   |
|--------|------------|---------------|
|        | np.ndarray |               |

### sigma { #savvi.linear_regression.LinearRegression.sigma }

```python
linear_regression.LinearRegression.sigma()
```

Estimate the standard deviation of the error term.

#### Returns {.doc-section .doc-section-returns}

| Name   | Type   | Description   |
|--------|--------|---------------|
|        | float  |               |

### sse { #savvi.linear_regression.LinearRegression.sse }

```python
linear_regression.LinearRegression.sse()
```

Compute the Sum of Squared Errors (SSE).

#### Returns {.doc-section .doc-section-returns}

| Name   | Type   | Description   |
|--------|--------|---------------|
|        | float  |               |

### standard_errors { #savvi.linear_regression.LinearRegression.standard_errors }

```python
linear_regression.LinearRegression.standard_errors()
```

Estimate the standard errors of the coefficients.

#### Returns {.doc-section .doc-section-returns}

| Name   | Type       | Description   |
|--------|------------|---------------|
|        | np.ndarray |               |

### t_stats { #savvi.linear_regression.LinearRegression.t_stats }

```python
linear_regression.LinearRegression.t_stats()
```

Calculate the t statistics of the coefficients.

#### Returns {.doc-section .doc-section-returns}

| Name   | Type       | Description   |
|--------|------------|---------------|
|        | np.ndarray |               |

### update { #savvi.linear_regression.LinearRegression.update }

```python
linear_regression.LinearRegression.update(yx)
```

Update the model with new data.

#### Parameters {.doc-section .doc-section-parameters}

| Name   | Type       | Description                                                    | Default    |
|--------|------------|----------------------------------------------------------------|------------|
| yx     | np.ndarray | Array of response and covariate values $[y, x_1, \dots, x_p]$. | _required_ |

### z2 { #savvi.linear_regression.LinearRegression.z2 }

```python
linear_regression.LinearRegression.z2()
```

Calculate the squared z-scores.

#### Returns {.doc-section .doc-section-returns}

| Name   | Type       | Description   |
|--------|------------|---------------|
|        | np.ndarray |               |