# Inference { #savvi.Inference }

```python
Inference(self, alpha, p, tests=1)
```

Base class for inference.

## Parameters {.doc-section .doc-section-parameters}

| Name   | Type   | Description                           | Default    |
|--------|--------|---------------------------------------|------------|
| alpha  | float  | Probability of Type I error $\alpha$. | _required_ |
| p      | int    | Number of parameters $p$.             | _required_ |
| tests  | int    | Number of hypothesis tests.           | `1`        |

## Attributes

| Name | Description |
| --- | --- |
| [alpha](#savvi.Inference.alpha) | Probability of Type I error $\alpha$. |
| [conf_int](#savvi.Inference.conf_int) | Confidence intervals for each parameter ($p \times 2$ matrix). |
| [estimate](#savvi.Inference.estimate) | Estimates for each parameter. |
| [n](#savvi.Inference.n) | Number of observations $n$. |
| [names](#savvi.Inference.names) | Names for each parameter. |
| [p](#savvi.Inference.p) | Number of parameters $p$. |
| [p_value](#savvi.Inference.p_value) | P-values for each hypothesis test. |

## Methods

| Name | Description |
| --- | --- |
| [batch](#savvi.Inference.batch) | For each sample unit in the batch |
| [infer](#savvi.Inference.infer) | Calculate confidence interval and p-value, then |
| [update](#savvi.Inference.update) | Update statistics with new data. |

### batch { #savvi.Inference.batch }

```python
Inference.batch(xs, **kwargs)
```

For each sample unit in the batch

1) call `update`,
2) call `infer`, and
3) append the `Inference` object to a list.

#### Returns {.doc-section .doc-section-returns}

| Name   | Type              | Description   |
|--------|-------------------|---------------|
|        | List\[Inference\] |               |

### infer { #savvi.Inference.infer }

```python
Inference.infer(**kwargs)
```

Calculate confidence interval and p-value, then

1) keep the maximum lower bound and minimum upper bound for the
confidence interval; and
2) keep the minimum p-value.

### update { #savvi.Inference.update }

```python
Inference.update(x, **kwargs)
```

Update statistics with new data.